"use strict";(self.webpackChunkmeta_erlang_github_io=self.webpackChunkmeta_erlang_github_io||[]).push([[3272],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,d=c["".concat(s,".").concat(m)]||c[m]||g[m]||l;return r?n.createElement(d,o(o({ref:t},u),{},{components:r})):n.createElement(d,o({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var p=2;p<l;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7063:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const l={title:"New Erlang releases 24.3.4.8, 25.1.2.1, 25.2.1",authors:["joaohf"],tags:["meta-erlang","news"]},o=void 0,i={permalink:"/blog/2023/01/22/index",editUrl:"https://github.com/meta-erlang/meta-erlang.github.io/tree/master/blog/2023-01-22/index.md",source:"@site/blog/2023-01-22/index.md",title:"New Erlang releases 24.3.4.8, 25.1.2.1, 25.2.1",description:"We've added support for the following new Erlang/OTP releases:",date:"2023-01-22T00:00:00.000Z",formattedDate:"January 22, 2023",tags:[{label:"meta-erlang",permalink:"/blog/tags/meta-erlang"},{label:"news",permalink:"/blog/tags/news"}],readingTime:.685,hasTruncateMarker:!1,authors:[{name:"Jo\xe3o Henrique Ferreira de Freitas",title:"Maintainer of meta-erlang",url:"https://github.com/joaohf",imageURL:"https://github.com/joaohf.png",key:"joaohf"}],frontMatter:{title:"New Erlang releases 24.3.4.8, 25.1.2.1, 25.2.1",authors:["joaohf"],tags:["meta-erlang","news"]},prevItem:{title:"meta-erlang on cloud I, EWAOL based",permalink:"/blog/2023/01/29/index"},nextItem:{title:"Welcome",permalink:"/blog/welcome"}},s={authorsImageUrls:[void 0]},p=[],u={toc:p};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"We've added support for the following new Erlang/OTP releases:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"meta-erlang branch"),(0,a.kt)("th",{parentName:"tr",align:null},"Erlang/OTP version"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"dunfell"),(0,a.kt)("td",{parentName:"tr",align:null},"24.3.4.8")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"kirkstone"),(0,a.kt)("td",{parentName:"tr",align:null},"24.3.4.8, 25.1.2.1, 25.2.1")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"langdale"),(0,a.kt)("td",{parentName:"tr",align:null},"24.3.4.8, 25.1.2.1, 25.2.1")))),(0,a.kt)("p",null,"Fixed bugs:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/meta-erlang/meta-erlang/issues/205"},"QA Issue buildpaths (reproducible builds) when building with langdale"),",\na specific patch has been integrated in order to avoid building flags into the\nfinal beam.smp binary.")),(0,a.kt)("p",null,"To be decided:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Yocto Langdale release has enabled reproducible build checks. Erlang/OTP from\n25 and later implements special flags to fix reproducible issues. But\nErlang/OTP 24 does not have these special flags as a consequence langdale\nErlang/OTP 24 builds warns about: ",(0,a.kt)("em",{parentName:"li"},"packages contains reference to TMPDIR\n","[buildpaths]"),". There are two paths that we could get. One is to drop\nErlang/OTP 24 support OR disable QA buildpaths checking.")))}c.isMDXComponent=!0}}]);