"use strict";(self.webpackChunkmeta_erlang_github_io=self.webpackChunkmeta_erlang_github_io||[]).push([[5140],{5788:(e,r,t)=>{t.d(r,{Iu:()=>p,yg:()=>g});var a=t(1504);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,s=function(e,r){if(null==e)return{};var t,a,s={},n=Object.keys(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var o=a.createContext({}),b=function(e){var r=a.useContext(o),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=b(e.components);return a.createElement(o.Provider,{value:r},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},u=a.forwardRef((function(e,r){var t=e.components,s=e.mdxType,n=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=b(t),u=s,g=c["".concat(o,".").concat(u)]||c[u]||m[u]||n;return t?a.createElement(g,i(i({ref:r},p),{},{components:t})):a.createElement(g,i({ref:r},p))}));function g(e,r){var t=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var n=t.length,i=new Array(n);i[0]=u;var l={};for(var o in r)hasOwnProperty.call(r,o)&&(l[o]=r[o]);l.originalType=e,l[c]="string"==typeof e?e:s,i[1]=l;for(var b=2;b<n;b++)i[b]=t[b];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9352:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>n,metadata:()=>l,toc:()=>b});var a=t(5072),s=(t(1504),t(5788));const n={sidebar_position:2,description:"bitbake classes to support recipes."},i="Bitbake classes",l={unversionedId:"guides/guides-bitbake-classes",id:"version-kirkstone/guides/guides-bitbake-classes",title:"Bitbake classes",description:"bitbake classes to support recipes.",source:"@site/versioned_docs/version-kirkstone/guides/guides-bitbake-classes.md",sourceDirName:"guides",slug:"/guides/guides-bitbake-classes",permalink:"/docs/kirkstone/guides/guides-bitbake-classes",draft:!1,editUrl:"https://github.com/meta-erlang/meta-erlang.github.io/tree/master/versioned_docs/version-kirkstone/guides/guides-bitbake-classes.md",tags:[],version:"kirkstone",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"bitbake classes to support recipes."},sidebar:"tutorialSidebar",previous:{title:"A tiny recipe",permalink:"/docs/kirkstone/guides/guides-a-tiny-recipe"},next:{title:"My application example",permalink:"/docs/kirkstone/guides/guides-my-application"}},o={},b=[{value:"rebar3.bbclass",id:"rebar3bbclass",level:2},{value:"rebar3-brokensep.bbclass",id:"rebar3-brokensepbbclass",level:2},{value:"rebar.bbclass",id:"rebarbbclass",level:2},{value:"mix.bbclass",id:"mixbbclass",level:2},{value:"mix-phoenix.bbclass",id:"mix-phoenixbbclass",level:2},{value:"mix-rebar3.bbclass",id:"mix-rebar3bbclass",level:2},{value:"mix-rustler.bbclass",id:"mix-rustlerbbclass",level:2}],p={toc:b},c="wrapper";function m(e){let{components:r,...t}=e;return(0,s.yg)(c,(0,a.c)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,s.yg)("h1",{id:"bitbake-classes"},"Bitbake classes"),(0,s.yg)("p",null,"The meta-erlang layer provides additional bitbake classes to handle and help\nmaking releases for Erlang and Elixir applications."),(0,s.yg)("h2",{id:"rebar3bbclass"},"rebar3.bbclass"),(0,s.yg)("p",null,"The\n",(0,s.yg)("a",{parentName:"p",href:"https://github.com/meta-erlang/meta-erlang/blob/master/classes/rebar3.bbclass"},"rebar3.bbclass"),"\nexports the following environment variables:"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("inlineCode",{parentName:"li"},"REBAR3_TARGET_INCLUDE_ERTS"),", target include ERTS path"),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("inlineCode",{parentName:"li"},"REBAR3_TARGET_SYSTEM_LIBS"),", target system ERTS path"),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("inlineCode",{parentName:"li"},"ERLANG_ERTS"),", the version of ERTS")),(0,s.yg)("p",null,"When configuring rebar3 to use the above variables, rebar3 can find the correct\nERTS to make a proper release."),(0,s.yg)("h2",{id:"rebar3-brokensepbbclass"},"rebar3-brokensep.bbclass"),(0,s.yg)("p",null,"Supports brokensep projects, that is the project builds with\n",(0,s.yg)("a",{parentName:"p",href:"https://docs.yoctoproject.org/ref-manual/variables.html#term-B"},"B")," ==\n",(0,s.yg)("a",{parentName:"p",href:"https://docs.yoctoproject.org/ref-manual/variables.html#term-S"},"S"),". See\nadditional details for brokensep context\n",(0,s.yg)("a",{parentName:"p",href:"https://docs.yoctoproject.org/ref-manual/classes.html?highlight=brokensep#autotools-bbclass"},"here"),"."),(0,s.yg)("h2",{id:"rebarbbclass"},"rebar.bbclass"),(0,s.yg)("p",null,"Legacy and deprecated rebar2 support throught\n",(0,s.yg)("a",{parentName:"p",href:"https://github.com/meta-erlang/meta-erlang/blob/master/classes/rebar.bbclass"},"rebar.bbclass"),"."),(0,s.yg)("h2",{id:"mixbbclass"},"mix.bbclass"),(0,s.yg)("p",null,"The\n",(0,s.yg)("a",{parentName:"p",href:"https://github.com/meta-erlang/meta-erlang/blob/master/classes/mix.bbclass"},"mix.bbclass"),"\nexports the following environment variables:"),(0,s.yg)("ul",null,(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("inlineCode",{parentName:"li"},"MIX_TARGET_INCLUDE_ERTS"),", target include ERTS path"),(0,s.yg)("li",{parentName:"ul"},(0,s.yg)("inlineCode",{parentName:"li"},"MIX_ENV"),", the default value is ",(0,s.yg)("inlineCode",{parentName:"li"},"prod"))),(0,s.yg)("h2",{id:"mix-phoenixbbclass"},"mix-phoenix.bbclass"),(0,s.yg)("p",null,"The\n",(0,s.yg)("a",{parentName:"p",href:"https://github.com/meta-erlang/meta-erlang/blob/master/classes/mix-phoenix.bbclass"},"mix-phoenix.bbclass"),"\nappends addional steps in order to make\n",(0,s.yg)("a",{parentName:"p",href:"https://hexdocs.pm/phoenix/releases.html"},"Phoenix releases"),". Also adds\n",(0,s.yg)("inlineCode",{parentName:"p"},"nodejs-native")," as DEPENDS variable."),(0,s.yg)("h2",{id:"mix-rebar3bbclass"},"mix-rebar3.bbclass"),(0,s.yg)("p",null,"Instead of letting mix tool fetching rebar3 binary, the class\n",(0,s.yg)("a",{parentName:"p",href:"https://github.com/meta-erlang/meta-erlang/blob/master/classes/mix-rebar3.bbclass"},"mix-rebar3.bbclass"),"\nconfigures the variable MIX_REBAR3 pointing it to the rebar3 binary from\n",(0,s.yg)("inlineCode",{parentName:"p"},"rebar3-native")," recipe."),(0,s.yg)("h2",{id:"mix-rustlerbbclass"},"mix-rustler.bbclass"),(0,s.yg)("p",null,"Supports building Elixir projects that uses Erlang NIFs written in Rust\nlanguage. The class\n",(0,s.yg)("a",{parentName:"p",href:"https://github.com/meta-erlang/meta-erlang/blob/master/classes/mix-rustler.bbclass"},"mix-rustler.bbclass"),"\nexports the variable ",(0,s.yg)("inlineCode",{parentName:"p"},"RUST_TARGET")," with the correct Rust target triple. An\nexample getting the correct target triple from the environment is shown here:\n",(0,s.yg)("a",{parentName:"p",href:"https://github.com/meta-erlang/hello-world/blob/master/hello-elixir-rustler/lib/hello_elixir_rustler/rustler_nif.ex"},"rustler_nifi.ex"),"."))}m.isMDXComponent=!0}}]);