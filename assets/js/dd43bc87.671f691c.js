"use strict";(self.webpackChunkmeta_erlang_github_io=self.webpackChunkmeta_erlang_github_io||[]).push([[242],{72858:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>p});var r=i(59489),t=i(74848),s=i(28453);const a={title:"fwup for A/B image upgrades on raspberrypi machines with NervesCloud, part I",authors:["joaohf"],tags:["meta-erlang","fwup","rpi"]},o=void 0,l={authorsImageUrls:[void 0]},p=[{value:"YP/OE Setup",id:"ypoe-setup",level:3},{value:"Configuring the build environment",id:"configuring-the-build-environment",level:3},{value:"Building images",id:"building-images",level:3},{value:"Flashing image",id:"flashing-image",level:3},{value:"And booting",id:"and-booting",level:3},{value:"Some important details not discussed before",id:"some-important-details-not-discussed-before",level:2},{value:"meta-nerves-hub",id:"meta-nerves-hub",level:3},{value:"Conclusions",id:"conclusions",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["This blog post introduces nerves-hub-link running on raspberrypi machines in\norder to upgrade firmware via ",(0,t.jsx)(n.a,{href:"https://nervescloud.com/",children:"NervesCloud"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["On previous ",(0,t.jsx)(n.a,{href:"/blog/tags/fwup/",children:"blog posts about fwup"}),", we have explored and\ntested using QEMU based machines. Now it's time to change the target and use a\nreal machine."]}),"\n",(0,t.jsx)(n.p,{children:"Nowadays, raspberrypi is an accessible development platform for prototyping and\nwhy not for real use cases too."}),"\n",(0,t.jsxs)(n.p,{children:["On Yocto side, there is a stable layer called\n",(0,t.jsx)(n.a,{href:"https://github.com/agherzan/meta-raspberrypi",children:"meta-raspberrypi"})," which\nimplements many of raspberrypi boards."]}),"\n",(0,t.jsxs)(n.p,{children:["The end goal is to update the target board using NervesCloud, the\n",(0,t.jsx)(n.a,{href:"/blog/2025/01/26/index/",children:"same way that was done using QEMU based machines"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"The focus of this post is about how to prepare a working Yocto setup for\nraspberry context. I'll not show a demonstration this time, reserving it for the\nnext blog posts ;)"}),"\n",(0,t.jsx)(n.h3,{id:"ypoe-setup",children:"YP/OE Setup"}),"\n",(0,t.jsx)(n.p,{children:"I'll try to simplify the YP/OE setup to just tree small steps:"}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsxs)(n.p,{children:["This is the same steps taken for the previous blog post called\n",(0,t.jsx)(n.a,{href:"/blog/2025/01/26/index/",children:"fwup for A/B image upgrades on QEMU machines with NervesCloud, part III"}),".\nBut now, with one additional layer called\n",(0,t.jsx)(n.a,{href:"https://github.com/agherzan/meta-raspberrypi",children:"meta-raspberrypi"}),"."]}),(0,t.jsx)(n.p,{children:"Also, removing the meta-qemu-bsp."})]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Cloning all repositories for master release:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone --branch master git://git.yoctoproject.org/poky\ngit clone --branch master https://github.com/openembedded/meta-openembedded.git\ngit clone --branch master https://github.com/fwup-home/meta-fwup\ngit clone --branch master https://github.com/joaohf/meta-fwup-examples\ngit clone --branch master https://github.com/meta-erlang/meta-erlang\ngit clone --branch master https://github.com/meta-erlang/meta-axon\ngit clone --branch master https://github.com/joaohf/meta-nerves-hub\ngit clone --branch master https://github.com/agherzan/meta-raspberrypi\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Source the init build environment script:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd poky\nsource oe-init-build-env ../build\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Add the needed layers:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"bitbake-layers add-layer ../meta-openembedded/meta-oe\nbitbake-layers add-layer ../meta-fwup\nbitbake-layers add-layer ../meta-fwup-examples\nbitbake-layers add-layer ../meta-nerves-hub\nbitbake-layers add-layer ../meta-raspberrypi\nbitbake-layers add-layer ../meta-axon\nbitbake-layers add-layer ../meta-erlang\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"configuring-the-build-environment",children:"Configuring the build environment"}),"\n",(0,t.jsxs)(n.p,{children:["For this use case, the quickest way is edit and add the ",(0,t.jsx)(n.em,{children:"conf/local.conf"}),"\nconfiguration file."]}),"\n",(0,t.jsxs)(n.p,{children:["We start enabling some\n",(0,t.jsx)(n.a,{href:"https://docs.yoctoproject.org/5.0.7/dev-manual/building.html#building-images-for-multiple-targets-using-multiple-configurations",children:"multiconfig configurations"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'BBMULTICONFIG ?= "\\\n    raspberrypi0-wifi-nerves-hub-link \\\n    raspberrypi4-64-nerves-hub-link \\\n    raspberrypi5-nerves-hub-link \\\n   "\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The layer meta-axon provides some samples for\n",(0,t.jsx)(n.a,{href:"https://github.com/meta-erlang/meta-axon/tree/master/conf/multiconfig",children:"raspberry configurations with nerves-hub enabled"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"multiconfig is useful because it simplify bitbake configurations when we have\nmany target boards. On my test setup I'm building for raspberrypi 0, 4 and 5."}),"\n",(0,t.jsx)(n.h3,{id:"building-images",children:"Building images"}),"\n",(0,t.jsx)(n.p,{children:"Next, we need to build images:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"bitbake multiconfig:raspberrypi4-64-nerves-hub-link:core-image-base\n\nbitbake multiconfig:raspberrypi5-nerves-hub-link:core-image-base\n\nbitbake multiconfig:raspberrypi0-wifi-nerves-hub-link:core-image-base\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"core-image-base is being used here. It's suitable for raspberrypi."})}),"\n",(0,t.jsx)(n.p,{children:"After the above commands, the result are the following files:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"tmp-raspberrypi0-wifi-glibc-nerves-hub-link/deploy/images/raspberrypi0-wifi/core-image-base-raspberrypi0-wifi.rootfs.fwup\ntmp-raspberrypi4-64-glibc-nerves-hub-link/deploy/images/raspberrypi4-64/core-image-base-raspberrypi4-64.rootfs.fwup\ntmp-raspberrypi5-glibc-nerves-hub-link/deploy/images/raspberrypi5/core-image-base-raspberrypi5.rootfs.fwup\n"})}),"\n",(0,t.jsx)(n.p,{children:"And are ready to flash into a bootable device."}),"\n",(0,t.jsx)(n.h3,{id:"flashing-image",children:"Flashing image"}),"\n",(0,t.jsx)(n.p,{children:"Before running fwup commands:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"bitbake fwup-native -caddto_recipe_sysroot\n"})}),"\n",(0,t.jsxs)(n.p,{children:["For each fwup image, and using ",(0,t.jsx)(n.code,{children:"fwup"})," for flashing (one sdcard for each image):"]}),"\n",(0,t.jsx)(n.p,{children:"rpi0:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"oe-run-native fwup-native \\\n  fwup -a -d /dev/sdc \\\n  -t complete \\\n  -i tmp-raspberrypi0-wifi-glibc-nerves-hub-link/deploy/images/raspberrypi0-wifi/core-image-base-raspberrypi0-wifi.rootfs.fwup\n"})}),"\n",(0,t.jsx)(n.p,{children:"rpi4:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"oe-run-native fwup-native \\\n  fwup -a -d /dev/sdc \\\n  -t complete \\\n  -i tmp-raspberrypi4-64-glibc-nerves-hub-link/deploy/images/raspberrypi4-64/core-image-base-raspberrypi4-64.rootfs.fwup\n"})}),"\n",(0,t.jsx)(n.p,{children:"rpi5:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"oe-run-native fwup-native \\\n  fwup -a -d /dev/sdc \\\n  -t complete \\\n  -i tmp-raspberrypi5-glibc-nerves-hub-link/deploy/images/raspberrypi5/core-image-base-raspberrypi5.rootfs.fwup\n"})}),"\n",(0,t.jsx)(n.h3,{id:"and-booting",children:"And booting"}),"\n",(0,t.jsx)(n.p,{children:"Just put the sdcard into raspiberrypi and boot. It should work as expected."}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"I promised, for the next blog post I'll share a full demonstration"})}),"\n",(0,t.jsx)(n.h2,{id:"some-important-details-not-discussed-before",children:"Some important details not discussed before"}),"\n",(0,t.jsx)(n.h3,{id:"meta-nerves-hub",children:"meta-nerves-hub"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"https://github.com/joaohf/meta-nerves-hub",children:"meta-nerves-hub"})," layer has a\nrecipe for\n",(0,t.jsx)(n.a,{href:"https://github.com/joaohf/meta-nerves-hub/tree/master/recipes-extended/nerves-hub-link_2.5.2.bb",children:"nerves-hub-link_2.5.2.bb"}),".\nThis recipe installs a standalone nerves-hub-link. I've tested the version 2.5.2\nand it works for my initial goals."]}),"\n",(0,t.jsx)(n.p,{children:"However, the later nerves-hub-link versions are not prepared to run as\nstandalone application anymore. It needs to be part of a BEAM application in\norder to be properly configured."}),"\n",(0,t.jsx)(n.p,{children:"I've tested recent versions and ended up with nerves-hub-link fighting with\nlinux network stack; for instance trying to configure it where it should not or\nusing others ways to detect configurations."}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"It's up to you when design Yocto based linux distributions select what network\nmanager best fits to your needs. Yocto gives to you many options as well a\ndefault one."})}),"\n",(0,t.jsx)(n.p,{children:"So, the next organic step will be to implement a BEAM application that uses\nnerves-hub-link. That would be a kind of nerves-hub-link-agent. I just want to\nstart it and play nice with linux network configuration stack."}),"\n",(0,t.jsx)(n.h2,{id:"conclusions",children:"Conclusions"}),"\n",(0,t.jsx)(n.p,{children:"So, this blog post was more to make a milestone for this trip. And we are\ngetting closer to get Yocto based linux distro full integrated with NervesCloud\nwithout thinking too much."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>o});var r=i(96540);const t={},s=r.createContext(t);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(s.Provider,{value:n},e.children)}},59489:e=>{e.exports=JSON.parse('{"permalink":"/blog/2025/03/21/index","editUrl":"https://github.com/meta-erlang/meta-erlang.github.io/tree/master/blog/2025-03-21/index.md","source":"@site/blog/2025-03-21/index.md","title":"fwup for A/B image upgrades on raspberrypi machines with NervesCloud, part I","description":"This blog post introduces nerves-hub-link running on raspberrypi machines in","date":"2025-03-21T00:00:00.000Z","tags":[{"inline":true,"label":"meta-erlang","permalink":"/blog/tags/meta-erlang"},{"inline":true,"label":"fwup","permalink":"/blog/tags/fwup"},{"inline":true,"label":"rpi","permalink":"/blog/tags/rpi"}],"readingTime":3.525,"hasTruncateMarker":true,"authors":[{"name":"Jo\xe3o Henrique Ferreira de Freitas","title":"Maintainer of meta-erlang","url":"https://github.com/joaohf","imageURL":"https://github.com/joaohf.png","key":"joaohf","page":null}],"frontMatter":{"title":"fwup for A/B image upgrades on raspberrypi machines with NervesCloud, part I","authors":["joaohf"],"tags":["meta-erlang","fwup","rpi"]},"unlisted":false,"prevItem":{"title":"New Erlang releases 25.3.2.20, 26.2.5.11, 27.3.3","permalink":"/blog/2025/04/19/index"},"nextItem":{"title":"fwup for A/B image upgrades on QEMU machines with NervesCloud, part III","permalink":"/blog/2025/01/26/index"}}')}}]);