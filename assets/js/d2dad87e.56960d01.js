"use strict";(self.webpackChunkmeta_erlang_github_io=self.webpackChunkmeta_erlang_github_io||[]).push([[4496],{2505:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>l});var s=a(4848),i=a(8453);const t={sidebar_position:2,sidebar_label:"Quickstart",sidebar_class_name:"green",description:"Getting start with meta-erlang."},r="Quickstart",c={id:"guides-quickstart",title:"Quickstart",description:"Getting start with meta-erlang.",source:"@site/versioned_docs/version-nanbield/guides-quickstart.md",sourceDirName:".",slug:"/guides-quickstart",permalink:"/docs/nanbield/guides-quickstart",draft:!1,unlisted:!1,editUrl:"https://github.com/meta-erlang/meta-erlang.github.io/tree/master/versioned_docs/version-nanbield/guides-quickstart.md",tags:[],version:"nanbield",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Quickstart",sidebar_class_name:"green",description:"Getting start with meta-erlang."},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/nanbield/"},next:{title:"Guides",permalink:"/docs/nanbield/category/guides"}},d={},l=[];function o(e){const n={a:"a",code:"code",em:"em",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"quickstart",children:"Quickstart"})}),"\n",(0,s.jsxs)(n.p,{children:["This quickstart guide uses the same steps stated at\n",(0,s.jsx)(n.a,{href:"https://docs.yoctoproject.org/brief-yoctoprojectqs/index.html",children:"Yocto Project Quick Build"}),"\nwith additional steps to get an erlang runtime up and running on the target\ndevice."]}),"\n",(0,s.jsxs)(n.p,{children:["Clone ",(0,s.jsx)(n.em,{children:"meta-erlang"})," and checkout branch ",(0,s.jsx)(n.em,{children:"nanbield"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone --branch nanbield https://github.com/meta-erlang/meta-erlang.git\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Clone ",(0,s.jsx)(n.em,{children:"poky"})," and checkout branch ",(0,s.jsx)(n.em,{children:"nanbield"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone --branch nanbield git://git.yoctoproject.org/poky\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Clone ",(0,s.jsx)(n.em,{children:"meta-openembedded"})," and checkout branch ",(0,s.jsx)(n.em,{children:"nanbield"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone --branch nanbield https://github.com/openembedded/meta-openembedded.git\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Move to ",(0,s.jsx)(n.em,{children:"poky"})," directory:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd poky\n"})}),"\n",(0,s.jsx)(n.p,{children:"Initialize the build environment:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"source oe-init-build-env ../build\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Add ",(0,s.jsx)(n.em,{children:"meta-oe"})," and ",(0,s.jsx)(n.em,{children:"meta-erlang"})," to ",(0,s.jsx)(n.em,{children:"conf/layer.conf"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"bitbake-layers add-layer ../meta-openembedded/meta-oe\nbitbake-layers add-layer ../meta-erlang\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Add ",(0,s.jsx)(n.code,{children:"erlang"})," package to ",(0,s.jsx)(n.code,{children:"IMAGE_INSTALL"})," in ",(0,s.jsx)(n.em,{children:"conf/local.conf"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"echo 'IMAGE_INSTALL:append = \" erlang\"' >> conf/local.conf\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Build the ",(0,s.jsx)(n.em,{children:"core-image-minimal"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"bitbake core-image-minimal\n"})}),"\n",(0,s.jsx)(n.p,{children:"Run the qemu:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"runqemu qemux86-64\n"})}),"\n",(0,s.jsxs)(n.p,{children:["A new window will open. Login as ",(0,s.jsx)(n.em,{children:"root"})," and call ",(0,s.jsx)(n.em,{children:"erl"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# erl\nErlang/OTP 25 [erts-13.2.2.5] [source] [64-bit] [smp:4:4] [ds:4:4:10] [async-threads:1] [jit:ns]\n\nEshell V13.2.2.5  (abort with ^G)\n1> erlang:system_info(cpu_topology).\n[{processor,[{core,{logical,0}},\n             {core,{logical,1}},\n             {core,{logical,2}},\n             {core,{logical,3}}]}]\n"})}),"\n",(0,s.jsx)(n.p,{children:"The other sections of this guide shows additional steps to create your own\nerlang application and run inside a custom image."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>c});var s=a(6540);const i={},t=s.createContext(i);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);