"use strict";(self.webpackChunkmeta_erlang_github_io=self.webpackChunkmeta_erlang_github_io||[]).push([[7377],{49899:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>b,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"applications/guides-rabbitmq","title":"rabbitmq","description":"Shows how to set up and install rabbitmq.","source":"@site/docs/applications/guides-rabbitmq.md","sourceDirName":"applications","slug":"/applications/guides-rabbitmq","permalink":"/docs/master/applications/guides-rabbitmq","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-erlang/meta-erlang.github.io/tree/master/docs/applications/guides-rabbitmq.md","tags":[],"version":"current","sidebarPosition":4.1,"frontMatter":{"sidebar_position":4.1,"sidebar_label":"rabbitmq","sidebar_class_name":"green","description":"Shows how to set up and install rabbitmq."},"sidebar":"tutorialSidebar","previous":{"title":"livebook","permalink":"/docs/master/applications/guides-livebook"},"next":{"title":"riak","permalink":"/docs/master/applications/guides-riak"}}');var t=r(74848),a=r(28453);const s={sidebar_position:4.1,sidebar_label:"rabbitmq",sidebar_class_name:"green",description:"Shows how to set up and install rabbitmq."},l="rabbitmq",b={},c=[];function o(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"rabbitmq",children:"rabbitmq"})}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsx)(n.p,{children:"Recommended PREFERRED_VERSION for rabbitmq:"}),(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"rabbitmq"}),(0,t.jsx)(n.th,{children:"Erlang/OTP"}),(0,t.jsx)(n.th,{children:"Elixir"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"3.11.28"}),(0,t.jsx)(n.td,{children:"25.3%"}),(0,t.jsx)(n.td,{children:"1.15%"})]})})]})]}),"\n",(0,t.jsxs)(n.p,{children:["In this guide we are using the plain meta-erlang layer to build the\n",(0,t.jsx)(n.a,{href:"https://www.rabbitmq.com/",children:"rabbitmq"})," server."]}),"\n",(0,t.jsxs)(n.p,{children:["The recipe\n",(0,t.jsx)(n.a,{href:"https://github.com/meta-erlang/meta-erlang/blob/master/recipes-connectivity/rabbitmq/",children:"rabbitmq"}),"\nbuilds the rabbitmq server using the crosscompile approach. Each rabbitmq\nrelease has a specific combination of supported Erlang and Elixir. You can check\nwhich version is supported here:\n",(0,t.jsx)(n.a,{href:"https://www.rabbitmq.com/which-erlang.html",children:" RabbitMQ Erlang Version Requirements "}),"."]}),"\n",(0,t.jsx)(n.p,{children:"As a final result, we are able to run an embedded rabbitmq using qemu."}),"\n",(0,t.jsx)(n.p,{children:"Follow the quickstart guide to get a basic working environment and then:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Add erlang and elixir preferred version ",(0,t.jsx)(n.em,{children:"conf/local.conf"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'PREFERRED_VERSION_elixir = "1.14%"\nPREFERRED_VERSION_elixir-native = "1.14%"\nPREFERRED_VERSION_nativesdk-elixir = "1.14%"\nPREFERRED_VERSION_erlang = "25.2.3"\nPREFERRED_VERSION_erlang-native = "25.2.3"\nPREFERRED_VERSION_nativesdk-erlang = "25.2.3"\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Add ",(0,t.jsx)(n.code,{children:"rabbitmq-server"})," package to ",(0,t.jsx)(n.code,{children:"IMAGE_INSTAL"})," in ",(0,t.jsx)(n.em,{children:"conf/local.conf"})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'IMAGE_INSTALL:append = " rabbitmq-server"\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Now its time to build the image:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"bitbake core-image-minimal\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"And check the results with qemu:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'runqemu core-image-minimal kvm nographic qemuparams="-m 1024"\n'})}),"\n",(0,t.jsx)(n.p,{children:"After qemu boot, we can check if rabbitmq-server is up and running:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"systemctl status rabbitmq-server\n* rabbitmq-server.service - RabbitMQ broker\n     Loaded: loaded (/lib/systemd/system/rabbitmq-server.service; enabled; preset: enabled)\n     Active: active (running) since Sat 2023-04-08 00:19:05 UTC; 3min 1s ago\n   Main PID: 199 (beam.smp)\n      Tasks: 28 (limit: 1169)\n     Memory: 153.5M\n     CGroup: /system.slice/rabbitmq-server.service\n             |-199 /usr/lib/erlang/erts-13.1.5/bin/beam.smp -W w -MBas ageffcbf -MHas ageffcbf -MBlmbcs 512 -MHlmbcs 512 -MMmcs 30 -P 1048576 -t 5000000 -stbt db -zdbbl 128000 -sbwt none -sbwtdcpu none -sb...\n             |-215 erl_child_setup 32768\n             |-249 /usr/lib/erlang/erts-13.1.5/bin/epmd -daemon\n             |-276 /usr/lib/erlang/erts-13.1.5/bin/inet_gethost 4\n             `-277 /usr/lib/erlang/erts-13.1.5/bin/inet_gethost 4\n\nApr 08 00:19:02 qemux86-64 rabbitmq-server[199]:   Doc guides:  https://rabbitmq.com/documentation.html\nApr 08 00:19:02 qemux86-64 rabbitmq-server[199]:   Support:     https://rabbitmq.com/contact.html\nApr 08 00:19:02 qemux86-64 rabbitmq-server[199]:   Tutorials:   https://rabbitmq.com/getstarted.html\nApr 08 00:19:02 qemux86-64 rabbitmq-server[199]:   Monitoring:  https://rabbitmq.com/monitoring.html\nApr 08 00:19:02 qemux86-64 rabbitmq-server[199]:   Logs: /var/log/rabbitmq/rabbit@qemux86-64.log\nApr 08 00:19:02 qemux86-64 rabbitmq-server[199]:         /var/log/rabbitmq/rabbit@qemux86-64_upgrade.log\nApr 08 00:19:02 qemux86-64 rabbitmq-server[199]:         <stdout>\nApr 08 00:19:02 qemux86-64 rabbitmq-server[199]:   Config file(s): /etc/rabbitmq/rabbitmq.conf\nApr 08 00:19:05 qemux86-64 rabbitmq-server[199]:   Starting broker... completed with 0 plugins.\nApr 08 00:19:05 qemux86-64 systemd[1]: Started RabbitMQ broker.\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The rabbitmq recipe creates a system user called ",(0,t.jsx)(n.code,{children:"rabbitmq"}),". All administrative\nrabbitmq commands should be done using that user."]}),"\n",(0,t.jsxs)(n.p,{children:["For example, to enable the\n",(0,t.jsx)(n.a,{href:"https://rabbitmq.com/management.html",children:"Management Plugin"})," do like following:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'su - rabbitmq\nroot@qemux86-64:~# rabbitmq-plugins enable rabbitmq_management\nwarning: the VM is running with native name encoding of latin1 which may cause Elixir to malfunction as it expects utf8. Please ensure your locale is set to UTF-8 (which can be verified by running "locale" i)\nEnabling plugins on node rabbit@qemux86-64:\nrabbitmq_management\nThe following plugins have been configured:\n  rabbitmq_management\n  rabbitmq_management_agent\n  rabbitmq_web_dispatch\nApplying plugin configuration to rabbit@qemux86-64...\nThe following plugins have been enabled:\n  rabbitmq_management\n  rabbitmq_management_agent\n  rabbitmq_web_dispatch\n\nset 3 plugins.\nOffline change; changes will take effect at broker restart.\n'})}),"\n",(0,t.jsx)(n.p,{children:"So, restarting the server as:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"systemctl restart rabbitmq-server\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Now, rabbitmq is ready for further explorations. The dashboard can be accessed\nvia ",(0,t.jsx)(n.a,{href:"http://192.168.7.2:15672",children:"http://192.168.7.2:15672"})]})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>l});var i=r(96540);const t={},a=i.createContext(t);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);