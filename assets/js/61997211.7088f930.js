"use strict";(self.webpackChunkmeta_erlang_github_io=self.webpackChunkmeta_erlang_github_io||[]).push([[3975],{3674:(e,r,l)=>{l.r(r),l.d(r,{assets:()=>h,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"guides/guides-hello-world","title":"Hello World examples for meta-erlang","description":"Hello world examples like.","source":"@site/docs/guides/guides-hello-world.md","sourceDirName":"guides","slug":"/guides/guides-hello-world","permalink":"/docs/master/guides/guides-hello-world","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-erlang/meta-erlang.github.io/tree/master/docs/guides/guides-hello-world.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"description":"Hello world examples like."},"sidebar":"tutorialSidebar","previous":{"title":"My application example","permalink":"/docs/master/guides/guides-my-application"},"next":{"title":"Building SDKs","permalink":"/docs/master/guides/guides-development"}}');var i=l(74848),n=l(28453);const a={sidebar_position:4,description:"Hello world examples like."},s="Hello World examples for meta-erlang",h={},o=[];function d(e){const r={a:"a",h1:"h1",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"hello-world-examples-for-meta-erlang",children:"Hello World examples for meta-erlang"})}),"\n",(0,i.jsxs)(r.p,{children:["The meta-erlang layer has many recipes for real world applications. On the other\nhand there is a repository called\n",(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/hello-world",children:"meta-erlang/hello-world"})," which has\na few examples showing how application written in Erlang and Elixir could be\nimplemented and integrated with YP/OE recipes."]}),"\n",(0,i.jsx)(r.p,{children:"For each example there is a correspondent recipe. The following table sumarize\nthe current examples:"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Example Name"}),(0,i.jsx)(r.th,{children:"Language"}),(0,i.jsx)(r.th,{children:"Description"}),(0,i.jsx)(r.th,{children:"Recipe"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/hello-world/tree/master/hello-http-server",children:"hello-http-server"})}),(0,i.jsx)(r.td,{children:"Erlang"}),(0,i.jsx)(r.td,{children:"A minimal http server written in Nitrogen"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/meta-erlang/tree/master/recipes-examples/hello-http-server/hello-http-server_0.1.0.bb",children:"hello-http-server_0.1.0.bb"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/hello-world/tree/master/hello-rabbitmq",children:"hello-rabbitmq"})}),(0,i.jsx)(r.td,{children:"Erlang"}),(0,i.jsx)(r.td,{children:"A minimal client that sends heart beats to a rabbitmq server"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/meta-erlang/tree/master/recipes-examples/hello-rabbitmq/hello-rabbitmq_0.1.0.bb",children:"hello-rabbitmq_0.1.0.bb"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/hello-world/tree/master/hello-erlang-interoperability",children:"hello-erlang-interoperability"})}),(0,i.jsx)(r.td,{children:"Erlang"}),(0,i.jsx)(r.td,{children:"A minimal Erlang application with Erlang port driver written in C"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/meta-erlang/tree/master/recipes-examples/hello-erlang-interoperability/hello-erlang-interoperability_0.1.0.bb",children:"hello-erlang-interoperability_0.1.0.bb"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/hello-world/tree/master/hello-erlang-c-node",children:"hello-erlang-c-node"})}),(0,i.jsx)(r.td,{children:"Erlang"}),(0,i.jsx)(r.td,{children:"A minimal Erlang C Node"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/meta-erlang/tree/master/recipes-examples/hello-erlang-interoperability/hello-erlang-c-node_0.1.0.bb",children:"hello-erlang-c-node_0.1.0.bb"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/hello-world/tree/master/hello-erlang-autoconf",children:"hello-erlang-autoconf"})}),(0,i.jsx)(r.td,{children:"Erlang"}),(0,i.jsx)(r.td,{children:"A minimal Erlang build with autoconf"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/meta-erlang/tree/master/recipes-examples/hello-erlang-autoconf/hello-erlang-autoconf_0.1.0.bb",children:"hello-erlang-autoconf_0.1.0.bb"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/hello-world/tree/master/hello-phoenix",children:"hello-phoenix"})}),(0,i.jsx)(r.td,{children:"Elixir"}),(0,i.jsx)(r.td,{children:"A minimal phoenix server"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/meta-erlang/tree/master/recipes-examples/hello-phoenix/hello-phoenix_0.1.0.bb",children:"hello-phoenix_0.1.0.bb"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/hello-world/tree/master/hello-elixir-interoperability",children:"hello-elixir-interoperability"})}),(0,i.jsx)(r.td,{children:"Elixir"}),(0,i.jsx)(r.td,{children:"A minimal Elixir application with Erlang NIF written in C"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/meta-erlang/tree/master/recipes-examples/hello-elixir-interoperability/hello-elixir-interoperability_0.1.0.bb",children:"hello-elixir-interoperability_0.1.0.bb"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/hello-world/tree/master/hello-elixir-rustler",children:"hello-elixir-rustler"})}),(0,i.jsx)(r.td,{children:"Elixir"}),(0,i.jsxs)(r.td,{children:["A ",(0,i.jsx)(r.a,{href:"https://github.com/rusterlium/rustler",children:"rustler"})," getting started application"]}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/meta-erlang/tree/master/recipes-examples/hello-elixir-rustler/hello-elixir-rustler_0.1.0.bb",children:"hello-elixir-rustler_0.1.0.bb"})})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/gleam-lang/example-echo-server",children:"example-gleam-server"})}),(0,i.jsx)(r.td,{children:"Gleam"}),(0,i.jsx)(r.td,{children:"An example Gleam web application"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"https://github.com/meta-erlang/meta-erlang/tree/master/recipes-examples/hello-gleam-echo-server/hello-gleam-echo-server_0.1.0.bb",children:"hello-gleam-echo-server_0.1.0.bb"})})]})]})]}),"\n",(0,i.jsx)(r.p,{children:"Those examples are great to check how the build tool (rebar3, mix, Makefiles)\nwere implemented in order to build successfully in a cross-compile environment.\nHowever, bear in mind that the examples are very simple and does not do anything\nreally useful. When trying the examples, make sure to use a recent YP/OE version\nas there is no guarantee that they will works with all Erlang, Elixir and YP/OE\nversion combinations."})]})}function c(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,r,l)=>{l.d(r,{R:()=>a,x:()=>s});var t=l(96540);const i={},n=t.createContext(i);function a(e){const r=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(n.Provider,{value:r},e.children)}}}]);