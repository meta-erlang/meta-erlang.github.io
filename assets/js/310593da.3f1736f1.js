"use strict";(self.webpackChunkmeta_erlang_github_io=self.webpackChunkmeta_erlang_github_io||[]).push([[6055],{69281:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>g,default:()=>c,frontMatter:()=>t,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"guides/guides-erlang-debugging","title":"Building Erlang/OTP for debugging","description":"Building Erlang/OTP for debugging","source":"@site/docs/guides/guides-erlang-debugging.md","sourceDirName":"guides","slug":"/guides/guides-erlang-debugging","permalink":"/docs/master/guides/guides-erlang-debugging","draft":false,"unlisted":false,"editUrl":"https://github.com/meta-erlang/meta-erlang.github.io/tree/master/docs/guides/guides-erlang-debugging.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"description":"Building Erlang/OTP for debugging"},"sidebar":"tutorialSidebar","previous":{"title":"Building BEAM Tools","permalink":"/docs/master/guides/guides-beamtools"},"next":{"title":"Applications","permalink":"/docs/master/category/applications"}}');var d=i(74848),s=i(28453);const t={sidebar_position:7,description:"Building Erlang/OTP for debugging"},g="Building Erlang/OTP for debugging",l={},o=[];function a(e){const n={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"building-erlangotp-for-debugging",children:"Building Erlang/OTP for debugging"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://www.erlang.org/doc/system/debugging.html",children:"Debug emulator"})}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://www.erlang.org/doc/system/install#advanced-configuration-and-build-of-erlang-otp_building_how-to-build-a-debug-enabled-erlang-runtime-system",children:"How to Build a Debug Enabled Erlang RunTime System"})}),"\n",(0,d.jsxs)(n.p,{children:["The erlang recipe from meta-erlang layer provides, via PACKAGECONFIG, a special\nway in order to build Erlang emulator for debugging purposes. The official\nErlang/OTP has all the details about why a special build is necessary,\n",(0,d.jsx)(n.a,{href:"https://www.erlang.org/doc/system/debugging.html",children:"Debug emulator"}),"."]}),"\n",(0,d.jsx)(n.p,{children:"Enable with:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:'PACKAGECONFIG:append:pn-erlang = " emu-type-debug"\n'})}),"\n",(0,d.jsxs)(n.p,{children:["Add the feature ",(0,d.jsx)(n.code,{children:"dbg-pkgs"})," and ",(0,d.jsx)(n.code,{children:"tools-debug"})," to EXTRA_IMAGE_FEATURES:"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:'EXTRA_IMAGE_FEATURES:append = " dbg-pkgs tools-debug"\n'})}),"\n",(0,d.jsx)(n.p,{children:"Build an image like core-image-minimal:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"bitbake core-image-minimal\n"})}),"\n",(0,d.jsx)(n.p,{children:"Run it using qemu:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"runqemu core-image-minimal\n"})}),"\n",(0,d.jsx)(n.p,{children:"Two shells:"}),"\n",(0,d.jsxs)(n.p,{children:["One for running ",(0,d.jsx)(n.code,{children:"erl"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"erl --emu-type debug\n"})}),"\n",(0,d.jsx)(n.p,{children:"A second one for attaching gdb:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{children:"gdb --pid=19\n"})}),"\n",(0,d.jsx)(n.p,{children:"According to Erlang/OTP documentation, the emu-type debug is a special emulator\ntailored for debugging purposes."})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>g});var r=i(96540);const d={},s=r.createContext(d);function t(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function g(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:t(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);