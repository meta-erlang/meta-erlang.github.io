"use strict";(self.webpackChunkmeta_erlang_github_io=self.webpackChunkmeta_erlang_github_io||[]).push([[6899],{98684:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var i=t(9e4),s=t(74848),a=t(28453);const r={title:"beamruntime",authors:["joaohf"],tags:["meta-erlang","beamruntime"]},l=void 0,o={authorsImageUrls:[void 0]},d=[{value:"beamruntime recipe",id:"beamruntime-recipe",level:2},{value:"Practical usage",id:"practical-usage",level:2},{value:"More details",id:"more-details",level:2},{value:"Next steps and ideas",id:"next-steps-and-ideas",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["One of the coolest features from the Yocto Project is the ability of creating\ntoolchains and SDK for specific needs. There is a full session on Yocto's\ndocumentation about\n",(0,s.jsx)(n.a,{href:"https://docs.yoctoproject.org/sdk-manual/index.html",children:"Software Development Kits"}),".\nAlso, many talks showing that feature in action, e.g.:\n",(0,s.jsx)(n.a,{href:"https://www.youtube.com/watch?v=b0yXASkIIv8&t=2496s",children:"Building Bare Metal Toolchains, Crosstool-ng and Yocto Project - Mark Hatle, Xilinx"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["While reading this discussion:\n",(0,s.jsx)(n.a,{href:"https://github.com/erlef/otp_builds/issues/39#issuecomment-3265877959",children:"It is possible that this project may expand to also provide Linux builds?"}),",\nI thought it would be interesting as a PoC to create a sort of ",(0,s.jsx)(n.em,{children:"beamruntime"}),"\nYocto based toolchain with only Erlang/OTP and Elixir installed plus base\nlibraries like libc, termcap, openssl. Nothing more. As meta-erlang layer has\nall the components and infrastructure for that. See beamtools idea."]}),"\n",(0,s.jsx)(n.p,{children:"The target is for Linux boxes that does not have Erlang/OTP installed, then the\nuser would install beamruntime and get access to a fresh and up to date\nErlang/OTP and Elixir environment. As the SDK generated by Yocto is\nself-content, there is no need to install anything else into Operational System."}),"\n",(0,s.jsx)(n.p,{children:"Moreover, beamruntime is linux distribution independent, it could run in any\ndistribution for the target architecture."}),"\n",(0,s.jsxs)(n.p,{children:["In fact, this idea is not new in meta-erlang land, ",(0,s.jsx)(n.em,{children:"beamtools"})," uses exact the\nsame approach. The difference is beamtools has development tools for building\nErlang/OTP and Elixir application (like headers, rebar3, etc). While beamruntime\nis just for running application, that is BEAM VM plus and modules."]}),"\n",(0,s.jsx)(n.h2,{id:"beamruntime-recipe",children:"beamruntime recipe"}),"\n",(0,s.jsxs)(n.p,{children:["I've started with two architecture targets in mind: x86-64 and aarch64. And a\nnew bitbake recipe called\n",(0,s.jsx)(n.a,{href:"https://github.com/meta-erlang/meta-erlang/blob/master/recipes-core/meta/beamruntime-tarball.bb",children:"beamruntime-tarball"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["After building it using ",(0,s.jsx)(n.code,{children:"bitbake beamruntime-tarball"})," a sdk was made and\navailable at ",(0,s.jsx)(n.em,{children:"tmp/deploy/sdk"})," ready for use."]}),"\n",(0,s.jsxs)(n.p,{children:["I borrowed some ideas from the\n",(0,s.jsx)(n.a,{href:"https://git.yoctoproject.org/poky/tree/meta/recipes-core/meta/buildtools-tarball.bb",children:"OE-core recipe from here"}),".\nBecause the purpose is very similar."]}),"\n",(0,s.jsx)(n.h2,{id:"practical-usage",children:"Practical usage"}),"\n",(0,s.jsx)(n.p,{children:"Installing beamruntime is like running a selfextract shell script which install\nbeamruntime in the target folder (-d option):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'$ x86_64-beamruntime-nativesdk-standalone-5.2.99+snapshot-musl-erlang-28.0.4-elixir-1.18.4.sh -d /tmp/test0\nBEAM runtime installer version 5.2.99+snapshot-erlang-28.0.4-elixir-1.18.4\n==========================================================================\nYou are about to install the SDK to "/tmp/test0". Proceed [Y/n]?\nExtracting SDK......done\nSetting it up...done\nSDK has been successfully set up and is ready to be used.\nEach time you wish to use the SDK in a new shell session, you need to source the environment setup script e.g.\n $ . /tmp/test0/environment-setup-x86_64-pokysdk-linux\n'})}),"\n",(0,s.jsx)(n.p,{children:"After the installation, and for each shell, it's necessary to source a script\nthat will fix some environment variables:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"$ source /tmp/test0/environment-setup-x86_64-pokysdk-linux\n\n$ erl\n\nErlang/OTP 28 [erts-16.0.3] [source] [64-bit] [smp:12:12] [ds:12:12:10] [async-threads:1] [jit:ns]\n\nEshell V16.0.3 (press Ctrl+G to abort, type help(). for help)\n1> application:start(crypto).\nok\n2>\n"})}),"\n",(0,s.jsx)(n.p,{children:"Erlang shell is working as expected. Let's take a look in the image process\nmapping to check from where the beam PID is getting libraries:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"$ cat /proc/142729/maps\n60245d000000-60245d018000 rw-p 00a00000 fc:00 26099460                   /tmp/test0/sysroots/x86_64-pokysdk-linux/usr/lib/erlang/erts-16.0.3/bin/beam.smp\n...\n785f53fee000-785f53ff3000 rw-p 001de000 fc:00 26099940                   /tmp/test0/sysroots/x86_64-pokysdk-linux/lib/libc.so.6\n...\n785f54272000-785f54275000 rw-p 00271000 fc:00 20982895                   /tmp/test0/sysroots/x86_64-pokysdk-linux/usr/lib/libstdc++.so.6.0.34\n...\n785f542cf000-785f542d0000 rw-p 0002b000 fc:00 26099910                   /tmp/test0/sysroots/x86_64-pokysdk-linux/lib/libgcc_s.so.1\n...\n785f543c1000-785f543c2000 rw-p 000f0000 fc:00 26099961                   /tmp/test0/sysroots/x86_64-pokysdk-linux/lib/libm.so.6\n...\n785f543dc000-785f543dd000 rw-p 00019000 fc:00 20982885                   /tmp/test0/sysroots/x86_64-pokysdk-linux/usr/lib/libz.so.1.3.1\n...\n785f5440f000-785f54410000 rw-p 00031000 fc:00 26099959                   /tmp/test0/sysroots/x86_64-pokysdk-linux/lib/libtinfo.so.5.9\n...\n785f54451000-785f54452000 rw-p 00039000 fc:00 26099952                   /tmp/test0/sysroots/x86_64-pokysdk-linux/lib/ld-linux-x86-64.so.2\n"})}),"\n",(0,s.jsxs)(n.p,{children:["As expected every dependency is self-content from ",(0,s.jsx)(n.code,{children:"/tmp/test0"}),". Even the openssl\nlibs:"]}),"\n",(0,s.jsx)(n.p,{children:"Get some crypto info:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'2> crypto:info().\n#{otp_crypto_version => "5.6",compile_type => normal,\n  link_type => dynamic,\n  cryptolib_version_compiled => "OpenSSL 3.5.2 5 Aug 2025",\n  cryptolib_version_linked => "OpenSSL 3.5.2 5 Aug 2025",\n  fips_provider_available => false}\n3> crypto:info_lib().\n[{<<"OpenSSL">>,810549280,<<"OpenSSL 3.5.2 5 Aug 2025">>}]\n'})}),"\n",(0,s.jsxs)(n.p,{children:["My Ubuntu (24.04) host has OpenSSL 3.0.13, not ",(0,s.jsx)(n.em,{children:"3.5.2"}),". That is a good sign for\nself-content approach."]}),"\n",(0,s.jsx)(n.p,{children:"So, beamruntime could be used as a generic Erlang/OTP and Elixir installation\nfor Linux boxes."}),"\n",(0,s.jsx)(n.h2,{id:"more-details",children:"More details"}),"\n",(0,s.jsxs)(n.p,{children:["The file\n",(0,s.jsx)(n.em,{children:"x86_64-beamruntime-nativesdk-standalone-5.2.99+snapshot-musl-erlang-28.0.4-elixir-1.18.4.sh"}),"\nhas 36291 KB and when installed it goes up to 78476 KB. The user can install it\nin any folder."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"The size footprint is relative, as in this experience I was targeting a generic\ninstallation."})}),"\n",(0,s.jsx)(n.p,{children:"beamruntime provides the following packages:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"libc"}),"\n",(0,s.jsx)(n.li,{children:"terminfo"}),"\n",(0,s.jsx)(n.li,{children:"zlib"}),"\n",(0,s.jsx)(n.li,{children:"openssl"}),"\n",(0,s.jsx)(n.li,{children:"Erlang/OTP"}),"\n",(0,s.jsx)(n.li,{children:"Elixir"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"A more detailed list with package size and theirs names:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"11825\tKiB\tnativesdk-erlang-erts\n7018\tKiB\tnativesdk-elixir\n6418\tKiB\tnativesdk-erlang-stdlib\n5894\tKiB\tnativesdk-libcrypto3\n4428\tKiB\tnativesdk-libc6\n3248\tKiB\tnativesdk-erlang-compiler\n3163\tKiB\tnativesdk-erlang-snmp\n2890\tKiB\tnativesdk-glibc-binary-localedata-en-us.utf-8\n2868\tKiB\tnativesdk-erlang-kernel\n2681\tKiB\tnativesdk-erlang-public-key\n2511\tKiB\tnativesdk-libstdc++6\n2254\tKiB\tnativesdk-erlang-ssl\n1971\tKiB\tnativesdk-erlang-xmerl\n1893\tKiB\tnativesdk-erlang-common-test\n1459\tKiB\tnativesdk-erlang-dialyzer\n1267\tKiB\tnativesdk-erlang-ssh\n1246\tKiB\tnativesdk-erlang-asn1\n1158\tKiB\tnativesdk-erlang-mnesia\n1137\tKiB\tnativesdk-erlang-diameter\n848\tKiB\tnativesdk-erlang-inets\n699\tKiB\tnativesdk-erlang-tools\n594\tKiB\tnativesdk-erlang-edoc\n472\tKiB\tnativesdk-erlang-emacs\n467\tKiB\tnativesdk-erlang-reltool\n449\tKiB\tnativesdk-erlang-syntax-tools\n401\tKiB\tnativesdk-erlang-sasl\n348\tKiB\tnativesdk-erlang-crypto\n328\tKiB\tnativesdk-erlang-runtime-tools\n261\tKiB\tnativesdk-erlang-parsetools\n220\tKiB\tnativesdk-erlang-eunit\n200\tKiB\tnativesdk-libtinfo5\n177\tKiB\tnativesdk-erlang-eldap\n175\tKiB\tnativesdk-libgcc1\n159\tKiB\tnativesdk-erlang-os-mon\n139\tKiB\tnativesdk-openssl-ossl-module-legacy\n124\tKiB\tnativesdk-erlang-erl-interface\n123\tKiB\tnativesdk-erlang-tftp\n115\tKiB\tnativesdk-erlang-ftp\n102\tKiB\tnativesdk-libz1\n85\tKiB\tnativesdk-erlang-typer\n66\tKiB\tnativesdk-erlang-epmd\n26\tKiB\tnativesdk-ncurses-terminfo-base\n24\tKiB\tnativesdk-openssl-conf\n0\tKiB\tnativesdk-sdk-provides-dummy\n0\tKiB\tnativesdk-erlang-modules\n0\tKiB\tnativesdk-erlang-erl-docgen\n0\tKiB\tnativesdk-erlang\n"})}),"\n",(0,s.jsx)(n.p,{children:"On this Erlang/OTP installation, I did not enabled wx (wxwidget), odbc, lkscp\noptions. And all Erlang/OTP modules have been installed. It's a pretty generic\ninstallation, though."}),"\n",(0,s.jsx)(n.p,{children:"Some additional Yocto configuration for reducing size were applied. Like the\nfollowing:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Disable locales:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'ENABLE_BINARY_LOCALE_GENERATION       = "1"\nLOCALE_GENERATION_WITH_CROSS_LOCALEDEF = "1"\nGLIBC_INTERNAL_USE_BINARY_LOCALE     = "compile"\n\nGLIBC_GENERATE_LOCALES                = "en_US.UTF-8"\nIMAGE_LINGUAS                         = "en-us"\n\nLOCALE_UTF8_ONLY      = "1"\nLOCALE_UTF8_IS_DEFAULT = "1"\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Use musl:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'TCLIBC = "musl"\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Disable opengl support:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'DISTRO_FEATURES_FILTER_NATIVESDK:remove = "opengl"\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Optional: disable termcap (reducing ~300KB)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'PACKAGECONFIG:remove:pn-nativesdk-erlang = "termcap"\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"next-steps-and-ideas",children:"Next steps and ideas"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Provide musl and glibc beamruntime packages for testing. Both versions of\nbeamruntime work as expected."}),"\n",(0,s.jsx)(n.li,{children:"Enable static build, what would be the final footprint ?"}),"\n",(0,s.jsx)(n.li,{children:"Make beamruntime a bit more generic like adding odbc, lksctp ?"}),"\n",(0,s.jsx)(n.li,{children:"Or make it less generic removing some erlang application that does not make\nsense for runtime. Like: dialyzer, edoc, emacs, typer"}),"\n",(0,s.jsx)(n.li,{children:"What does mean generic nowadays ? Providing a generic beamruntime is feasible\nand if a specific user wants to add or remove components it could be easily\ndone building a beamruntime itself."}),"\n",(0,s.jsx)(n.li,{children:"How beamruntime could be useful for tools that expect a Erlang/OTP\ninstallation on the target host ?"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(96540);const s={},a=i.createContext(s);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}},9e4:e=>{e.exports=JSON.parse('{"permalink":"/blog/2025/09/25/index","editUrl":"https://github.com/meta-erlang/meta-erlang.github.io/tree/master/blog/2025-09-25/index.md","source":"@site/blog/2025-09-25/index.md","title":"beamruntime","description":"One of the coolest features from the Yocto Project is the ability of creating","date":"2025-09-25T00:00:00.000Z","tags":[{"inline":true,"label":"meta-erlang","permalink":"/blog/tags/meta-erlang"},{"inline":true,"label":"beamruntime","permalink":"/blog/tags/beamruntime"}],"readingTime":5.07,"hasTruncateMarker":true,"authors":[{"name":"Jo\xe3o Henrique Ferreira de Freitas","title":"Maintainer of meta-erlang","url":"https://github.com/joaohf","imageURL":"https://github.com/joaohf.png","key":"joaohf","page":null}],"frontMatter":{"title":"beamruntime","authors":["joaohf"],"tags":["meta-erlang","beamruntime"]},"unlisted":false,"prevItem":{"title":"Testing meta-erlang with LuX","permalink":"/blog/2025/09/26/index"},"nextItem":{"title":"Erlang-Red, recipe introduction","permalink":"/blog/2025/07/27/index"}}')}}]);