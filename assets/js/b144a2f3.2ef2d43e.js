"use strict";(self.webpackChunkmeta_erlang_github_io=self.webpackChunkmeta_erlang_github_io||[]).push([[5548],{5788:(e,t,n)=>{n.d(t,{Iu:()=>g,yg:()=>m});var r=n(1504);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},g=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),p=s(n),d=a,m=p["".concat(c,".").concat(d)]||p[d]||u[d]||i;return n?r.createElement(m,o(o({ref:t},g),{},{components:n})):r.createElement(m,o({ref:t},g))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5708:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(5072),a=(n(1504),n(5788));const i={description:"How to contribute with meta-erlang project."},o="Contributing with meta-erlang",l={unversionedId:"contributing/contributing-meta-erlang",id:"version-scarthgap/contributing/contributing-meta-erlang",title:"Contributing with meta-erlang",description:"How to contribute with meta-erlang project.",source:"@site/versioned_docs/version-scarthgap/contributing/contributing-meta-erlang.md",sourceDirName:"contributing",slug:"/contributing/contributing-meta-erlang",permalink:"/docs/scarthgap/contributing/contributing-meta-erlang",draft:!1,editUrl:"https://github.com/meta-erlang/meta-erlang.github.io/tree/master/versioned_docs/version-scarthgap/contributing/contributing-meta-erlang.md",tags:[],version:"scarthgap",frontMatter:{description:"How to contribute with meta-erlang project."},sidebar:"tutorialSidebar",previous:{title:"Documentation",permalink:"/docs/scarthgap/contributing/contributing-doc-site"},next:{title:"Thanks",permalink:"/docs/scarthgap/thanks"}},c={},s=[{value:"Add a new erlang version",id:"add-a-new-erlang-version",level:2},{value:"Add a new elixir version",id:"add-a-new-elixir-version",level:2}],g={toc:s},p="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(p,(0,r.c)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"contributing-with-meta-erlang"},"Contributing with meta-erlang"),(0,a.yg)("p",null,"To develop the meta-erlang layer, you need to setup the Yocto project\nenvironment and starting to make changes in meta-erlang code."),(0,a.yg)("h2",{id:"add-a-new-erlang-version"},"Add a new erlang version"),(0,a.yg)("p",null,"When ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/erlang/otp"},"Erlang OTP")," team releases a new version,\nand you wish to try that version with meta-erlang then you can do the follow\nsteps:"),(0,a.yg)("p",null,"Run the manifest script to create the bitbake files:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"scripts/contrib/erlang/generate-manifest --erlang-version 21.3.2 > recipes-devtools/erlang/erlang-21.3.2-manifest.inc\n")),(0,a.yg)("p",null,"Copy the erlang recipe to the new version:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"cp recipes-devtools/erlang/erlang_21.1.0.bb recipes-devtools/erlang/erlang_21.3.2.bb\n")),(0,a.yg)("p",null,"Create include file to hold the ",(0,a.yg)("inlineCode",{parentName:"p"},"SRCREV")," and point to the git sha1 commit that\nrepresents the Erlang OTP version:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"echo 'SRCREV = \"7e6fff1e849998a3dd747b4d3cf35f39cb896aa0\"' >> recipes-devtools/erlang/erlang-21.3.2.inc\n")),(0,a.yg)("h2",{id:"add-a-new-elixir-version"},"Add a new elixir version"),(0,a.yg)("p",null,"Copy the elixir recipe to the new version:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"cp recipes-devtools/elixir/elixir_1.8.2.bb recipes-devtools/elixir/elixir_1.9.0.bb\n")),(0,a.yg)("p",null,"Open the elixir_1.9.0.bb and change the following:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"SRCREV"),": must point to the sha1 commit that represents the new elixir version"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("inlineCode",{parentName:"li"},"SRC_URL"),": change the version ('branch=') to the base elixir version branch.\nExample: 'v1.8'")))}u.isMDXComponent=!0}}]);