"use strict";(self.webpackChunkmeta_erlang_github_io=self.webpackChunkmeta_erlang_github_io||[]).push([[1954],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>u});var l=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,l)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,l,a=function(e,t){if(null==e)return{};var r,l,a={},n=Object.keys(e);for(l=0;l<n.length;l++)r=n[l],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(l=0;l<n.length;l++)r=n[l],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=l.createContext({}),m=function(e){var t=l.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=m(e.components);return l.createElement(p.Provider,{value:t},e.children)},h="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},g=l.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),h=m(r),g=a,u=h["".concat(p,".").concat(g)]||h[g]||d[g]||n;return r?l.createElement(u,i(i({ref:t},s),{},{components:r})):l.createElement(u,i({ref:t},s))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,i=new Array(n);i[0]=g;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[h]="string"==typeof e?e:a,i[1]=o;for(var m=2;m<n;m++)i[m]=r[m];return l.createElement.apply(null,i)}return l.createElement.apply(null,r)}g.displayName="MDXCreateElement"},3055:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>m});var l=r(7462),a=(r(7294),r(3905));const n={sidebar_position:4,description:"Hello world examples like."},i="Hello World examples for meta-erlang",o={unversionedId:"guides/guides-hello-world",id:"guides/guides-hello-world",title:"Hello World examples for meta-erlang",description:"Hello world examples like.",source:"@site/docs/guides/guides-hello-world.md",sourceDirName:"guides",slug:"/guides/guides-hello-world",permalink:"/docs/guides/guides-hello-world",draft:!1,editUrl:"https://github.com/meta-erlang/meta-erlang.github.io/tree/master/docs/guides/guides-hello-world.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"Hello world examples like."},sidebar:"tutorialSidebar",previous:{title:"My application example",permalink:"/docs/guides/guides-my-application"},next:{title:"Building SDKs",permalink:"/docs/guides/guides-development"}},p={},m=[],s={toc:m};function h(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,l.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"hello-world-examples-for-meta-erlang"},"Hello World examples for meta-erlang"),(0,a.kt)("p",null,"The meta-erlang layer has many recipes for real world applications. On the other\nhand there is a repository called\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/meta-erlang/hello-world"},"meta-erlang/hello-world")," which has\na few examples showing how application written in Erlang and Elixir could be\nimplemented and integrated with YP/OE recipes."),(0,a.kt)("p",null,"For each example there is a correspondent recipe. The following table sumarize\nthe current examples:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Example Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Language"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:null},"Recipe"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/meta-erlang/hello-world/tree/master/hello-http-server"},"hello-http-server")),(0,a.kt)("td",{parentName:"tr",align:null},"Erlang"),(0,a.kt)("td",{parentName:"tr",align:null},"A minimal http server written in Nitrogen"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/meta-erlang/meta-erlang/tree/master/recipes-examples/hello-http-server/hello-http-server_0.1.0.bb"},"hello-http-server_0.1.0.bb"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/meta-erlang/hello-world/tree/master/hello-rabbitmq"},"hello-rabbitmq")),(0,a.kt)("td",{parentName:"tr",align:null},"Erlang"),(0,a.kt)("td",{parentName:"tr",align:null},"A minimal client that sends heart beats to a rabbitmq server"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/meta-erlang/meta-erlang/tree/master/recipes-examples/hello-rabbitmq/hello-rabbitmq_0.1.0.bb"},"hello-rabbitmq_0.1.0.bb"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/meta-erlang/hello-world/tree/master/hello-erlang-interoperability"},"hello-erlang-interoperability")),(0,a.kt)("td",{parentName:"tr",align:null},"Erlang"),(0,a.kt)("td",{parentName:"tr",align:null},"A minimal Erlang application with Erlang port driver written in C"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/meta-erlang/meta-erlang/tree/master/recipes-examples/hello-erlang-interoperability/hello-erlang-interoperability_0.1.0.bb"},"hello-erlang-interoperability_0.1.0.bb"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/meta-erlang/hello-world/tree/master/hello-erlang-c-node"},"hello-erlang-c-node")),(0,a.kt)("td",{parentName:"tr",align:null},"Erlang"),(0,a.kt)("td",{parentName:"tr",align:null},"A minimal Erlang C Node"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/meta-erlang/meta-erlang/tree/master/recipes-examples/hello-erlang-interoperability/hello-erlang-c-node_0.1.0.bb"},"hello-erlang-c-node_0.1.0.bb"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/meta-erlang/hello-world/tree/master/hello-phoenix"},"hello-phoenix")),(0,a.kt)("td",{parentName:"tr",align:null},"Elixir"),(0,a.kt)("td",{parentName:"tr",align:null},"A minimal phoenix server"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/meta-erlang/meta-erlang/tree/master/recipes-examples/hello-phoenix/hello-phoenix_0.1.0.bb"},"hello-phoenix_0.1.0.bb"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/meta-erlang/hello-world/tree/master/hello-elixir-interoperability"},"hello-elixir-interoperability")),(0,a.kt)("td",{parentName:"tr",align:null},"Elixir"),(0,a.kt)("td",{parentName:"tr",align:null},"A minimal Elixir application with Erlang NIF written in C"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/meta-erlang/meta-erlang/tree/master/recipes-examples/hello-elixir-interoperability/hello-elixir-interoperability_0.1.0.bb"},"hello-elixir-interoperability_0.1.0.bb"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/meta-erlang/hello-world/tree/master/hello-elixir-rustler"},"hello-elixir-rustler")),(0,a.kt)("td",{parentName:"tr",align:null},"Elixir"),(0,a.kt)("td",{parentName:"tr",align:null},"A ",(0,a.kt)("a",{parentName:"td",href:"https://github.com/rusterlium/rustler"},"rustler")," getting started application"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"https://github.com/meta-erlang/meta-erlang/tree/master/recipes-examples/hello-elixir-rustler/hello-elixir-rustler_0.1.0.bb"},"hello-elixir-rustler_0.1.0.bb"))))),(0,a.kt)("p",null,"Those examples are great to check how the build tool (rebar3, mix, Makefiles)\nwere implemented in order to build successfuly in a cross-compile environment.\nHowever, bear in mind that the examples are very simple and does not do anything\nreally useful. When trying the examples, make sure to use a recent YP/OE version\nas there is no guarantee that they will works with all Erlang, Elixir and YP/OE\nversion combinations."))}h.isMDXComponent=!0}}]);